// Code generated by MockGen. DO NOT EDIT.
// Source: IRepo.go

// Package auth is a generated GoMock package.
package auth

import (
	models "RSOI_CW/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIRepo is a mock of IRepo interface.
type MockIRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIRepoMockRecorder
}

// MockIRepoMockRecorder is the mock recorder for MockIRepo.
type MockIRepoMockRecorder struct {
	mock *MockIRepo
}

// NewMockIRepo creates a new mock instance.
func NewMockIRepo(ctrl *gomock.Controller) *MockIRepo {
	mock := &MockIRepo{ctrl: ctrl}
	mock.recorder = &MockIRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRepo) EXPECT() *MockIRepoMockRecorder {
	return m.recorder
}

// AddUser mocks base method.
func (m *MockIRepo) AddUser(user models.User) (models.User, int) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddUser", user)
	ret0, _ := ret[0].(models.User)
	ret1, _ := ret[1].(int)
	return ret0, ret1
}

// AddUser indicates an expected call of AddUser.
func (mr *MockIRepoMockRecorder) AddUser(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddUser", reflect.TypeOf((*MockIRepo)(nil).AddUser), user)
}

// GetUser mocks base method.
func (m *MockIRepo) GetUser(login, password string) (models.User, int) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", login, password)
	ret0, _ := ret[0].(models.User)
	ret1, _ := ret[1].(int)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser.
func (mr *MockIRepoMockRecorder) GetUser(login, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockIRepo)(nil).GetUser), login, password)
}

// GetUsers mocks base method.
func (m *MockIRepo) GetUsers() ([]models.User, int) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsers")
	ret0, _ := ret[0].([]models.User)
	ret1, _ := ret[1].(int)
	return ret0, ret1
}

// GetUsers indicates an expected call of GetUsers.
func (mr *MockIRepoMockRecorder) GetUsers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsers", reflect.TypeOf((*MockIRepo)(nil).GetUsers))
}
